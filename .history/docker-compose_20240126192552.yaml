version: "3"
networks:
  stream-app:
    driver: bridge
services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
    expose:
      - 9092
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  bff:
    build:
      context: ./bff
      dockerfile: Dockerfile.Local
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./bff:/app
    command: sh -c "npm install; npm run prebuild; npm run start:debug"
    tty: true
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile.Local
    working_dir: /app
    ports:
      - 80:3000
    volumes:
      - ./webapp:/app
    command: npm start

  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_PASSWORD: example

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080