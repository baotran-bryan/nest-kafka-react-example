version: "3"
services:
  kafka:
    image: 'bitnami/kafka:latest'
    ports:
      - '9092:9092'
      - '9094:9094'
    expose:
      - 9092
      - 9094
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
  bff:
    build:
      context: ./bff
      dockerfile: Dockerfile.Local
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./bff:/app
    command: sh -c "npm install; npm run prebuild; npm run start:debug"
    tty: true
  webapp:
    build:
      context: ./webapp
      dockerfile: Dockerfile.Local
    working_dir: /app
    ports:
      - 80:3000
    volumes:
      - ./webapp:/app
    command: npm start

  postgres:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_DB=edgedb
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_INITDB_ARGS="--encoding=UTF-8"
    ports:
      - "5432:5432"
    expose:
      - 5432
    volumes:
      - $PWD/db/postgresql.conf:/etc/postgresql/postgresql.conf
      - $PWD/db/init:/docker-entrypoint-initdb.d
      - db:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - postgres
volumes:
  db:
